  name: Discord Bot Build/Push & VKE Deployment
  on:
    workflow_dispatch:
      inputs:
        tag:
          description: 'Docker Tag'
          required: true

  jobs:

    build-push-deploy:

      env:
        namespace: discord

      name: Build Push & Deploy to VKE
      runs-on: ubuntu-latest

      steps:
        - name: Checkout code
          uses: actions/checkout@v3
        
        - name: Set up Docker Buildx
          uses: docker/setup-buildx-action@v3

        - name: Login to DockerHub
          uses: docker/login-action@v3
          with:
              username: ${{ secrets.DOCKER_USERNAME }}
              password: ${{ secrets.DOCKER_PASSWORD }}
        
        - name: Build and push to DockerHub
          uses: docker/build-push-action@v3
          with:
            context: .
            file: ./Dockerfile
            push: true
            tags: hemilabs/discord:${{ github.event.inputs.tag }}
            secrets: |
              ${{ secrets.WALLET_PRIVATE_KEY  }}
              ${{ secrets.BOT_TOKEN }}

        - name: Install kubectl
          uses: azure/k8s-set-context@v3
          with:
            kubeconfig: ${{ secrets.VKE_TEST_KUBECONFIG }}

        - name: Install Kustomize
          uses: imranismail/setup-kustomize@v2

        - name: Configure K8s Cluster Access for VKE
          env:
            VKE_TEST_KUBECONFIG: ${{ secrets.VKE_TEST_KUBECONFIG }}
          run: |
            echo $VKE_TEST_KUBECONFIG > ./kubeconfig.yaml
            export KUBECONFIG=$PWD/kubeconfig.yaml

        - name: Create K8s Secrets
          run: |
            if kubectl get secret discord-bot-secrets --namespace=${{ env.namespace }}; then
              echo "Bot Secret already exists"
            else
              echo "Creating Bot Secret"
              kubectl create secret generic discord-bot-secrets \
              --from-literal=BOT_TOKEN=${{ secrets.BOT_TOKEN }} \
              --from-literal=WALLET_PRIVATE_KEY=${{ secrets.WALLET_PRIVATE_KEY }} \
              --namespace=${{ env.namespace }}
            fi
            echo "Checking Dockerhub Secret"

        - name: Dockerhub Secrets
          run: |
            if kubectl get secret dockerhub-secret --namespace=${{ env.namespace }}; then
              echo "Dockerhub Secret already exists"
            else
              echo "Creating Dockerhub Secret"
              kubectl create secret docker-registry dockerhub-secret \
              --docker-server=https://index.docker.io/v1/ \
              --docker-username=${{ secrets.DOCKER_USERNAME }} \
              --docker-password=${{ secrets.DOCKER_PASSWORD }} \
              --docker-email=${{ secrets.DOCKER_EMAIL }} \
              --namespace=${{ env.namespace }}
            fi

        - name: Update Image Tag in deployment
          run: |
            kustomize edit set image hemilabs/discord:latest=hemilabs/discord:${{ github.event.inputs.tag }}
            kustomize edit set namespace ${{ env.namespace }}
          working-directory: ./kustomize

        - name: Deploy to VKE
          run: kubectl apply -k ./kustomize